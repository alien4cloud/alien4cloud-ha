tosca_definitions_version: tosca_simple_yaml_1_0_0_wd03

template_name: alien4cloud-ha-docker
template_version: 1.0.0-SNAPSHOT
template_author: Fastconnect

imports:
  - aws-provider-types:*
  - alien4cloud-ha-topo-big:*

topology_template:

  inputs:
    image_id:
      type: string
    instance_type:
      type: string
    key_name:
      type: string
    login:
      type: string
    key_content:
      type: string
    security_groups:
      type: list
      entry_schema:
        type: string

  node_templates:
    Network:
      type: com.toscaruntime.aws.nodes.PublicNetwork
    BackendCompute:
      type: com.toscaruntime.aws.nodes.Instance
      properties:
        image_id: { get_input: image_id }
        instance_type: "t2.medium"
        login: { get_input: login }
        key_name: { get_input: key_name }
        key_content: { get_input: key_content }
        security_groups: { get_input: security_groups }
        user_data: |
          #!/bin/sh
          sudo cp /etc/hosts /tmp/hosts
          echo 127.0.0.1 `hostname` | sudo tee /etc/hosts > /dev/null
          cat  /tmp/hosts | sudo tee -a /etc/hosts > /dev/null
      capabilities:
        scalable:
          properties:
            max_instances: { get_input: backend_count }
            min_instances: { get_input: backend_count }
            default_instances: { get_input: backend_count }
    ConsulCompute:
      type: com.toscaruntime.aws.nodes.Instance
      properties:
        image_id: { get_input: image_id }
        instance_type: { get_input: instance_type }
        login: { get_input: login }
        key_name: { get_input: key_name }
        key_content: { get_input: key_content }
        security_groups: { get_input: security_groups }
        user_data: |
          #!/bin/sh
          sudo cp /etc/hosts /tmp/hosts
          echo 127.0.0.1 `hostname` | sudo tee /etc/hosts > /dev/null
          cat  /tmp/hosts | sudo tee -a /etc/hosts > /dev/null
      capabilities:
        scalable:
          properties:
            max_instances: { get_input: consul_count }
            min_instances: { get_input: consul_count }
            default_instances: { get_input: consul_count }
    SambaCompute:
      type: com.toscaruntime.aws.nodes.Instance
      properties:
        image_id: { get_input: image_id }
        instance_type: { get_input: instance_type }
        login: { get_input: login }
        key_name: { get_input: key_name }
        key_content: { get_input: key_content }
        security_groups: { get_input: security_groups }
        user_data: |
          #!/bin/sh
          sudo cp /etc/hosts /tmp/hosts
          echo 127.0.0.1 `hostname` | sudo tee /etc/hosts > /dev/null
          cat  /tmp/hosts | sudo tee -a /etc/hosts > /dev/null
    FrontCompute:
      type: com.toscaruntime.aws.nodes.Instance
      properties:
        image_id: { get_input: image_id }
        instance_type: { get_input: instance_type }
        login: { get_input: login }
        key_name: { get_input: key_name }
        key_content: { get_input: key_content }
        security_groups: { get_input: security_groups }
        user_data: |
          #!/bin/sh
          sudo cp /etc/hosts /tmp/hosts
          echo 127.0.0.1 `hostname` | sudo tee /etc/hosts > /dev/null
          cat  /tmp/hosts | sudo tee -a /etc/hosts > /dev/null
      requirements:
        - network:
            node: Network
            capability: tosca.capabilities.Connectivity
            relationship: tosca.relationships.Network
    AlienCompute:
      type: com.toscaruntime.aws.nodes.Instance
      properties:
        image_id: { get_input: image_id }
        instance_type: "t2.medium"
        login: { get_input: login }
        key_name: { get_input: key_name }
        key_content: { get_input: key_content }
        security_groups: { get_input: security_groups }
        user_data: |
          #!/bin/sh
          sudo cp /etc/hosts /tmp/hosts
          echo 127.0.0.1 `hostname` | sudo tee /etc/hosts > /dev/null
          cat  /tmp/hosts | sudo tee -a /etc/hosts > /dev/null
      capabilities:
        scalable:
          properties:
            max_instances: 10
            min_instances: 1
            default_instances: { get_input: alien_count }
